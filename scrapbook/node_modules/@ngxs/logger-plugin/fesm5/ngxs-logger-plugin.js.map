{"version":3,"file":"ngxs-logger-plugin.js","sources":["ng://@ngxs/logger-plugin/src/internals.ts","ng://@ngxs/logger-plugin/src/action-logger.ts","ng://@ngxs/logger-plugin/src/log-writer.ts","ng://@ngxs/logger-plugin/src/symbols.ts","ng://@ngxs/logger-plugin/src/logger.plugin.ts","ng://@ngxs/logger-plugin/src/logger.module.ts"],"sourcesContent":["export const repeat = (str: string, times: number) => new Array(times + 1).join(str);\r\n\r\nexport const pad = (num: number, maxLength: number) =>\r\n  repeat('0', maxLength - num.toString().length) + num;\r\n\r\nexport function formatTime(time: Date) {\r\n  return (\r\n    pad(time.getHours(), 2) +\r\n    `:` +\r\n    pad(time.getMinutes(), 2) +\r\n    `:` +\r\n    pad(time.getSeconds(), 2) +\r\n    `.` +\r\n    pad(time.getMilliseconds(), 3)\r\n  );\r\n}\r\n","import { getActionTypeFromInstance, Store } from '@ngxs/store';\r\n\r\nimport { formatTime } from './internals';\r\nimport { LogWriter } from './log-writer';\r\n\r\nexport class ActionLogger {\r\n  constructor(private action: any, private store: Store, private logWriter: LogWriter) {}\r\n\r\n  dispatched(state: any) {\r\n    const actionName = getActionTypeFromInstance(this.action);\r\n    const formattedTime = formatTime(new Date());\r\n\r\n    const message = `action ${actionName} @ ${formattedTime}`;\r\n    this.logWriter.startGroup(message);\r\n\r\n    // print payload only if at least one property is supplied\r\n    if (this._hasPayload(this.action)) {\r\n      this.logWriter.logGrey('payload', { ...this.action });\r\n    }\r\n\r\n    this.logWriter.logGrey('prev state', state);\r\n  }\r\n\r\n  completed(nextState: any) {\r\n    this.logWriter.logGreen('next state', nextState);\r\n    this.logWriter.endGroup();\r\n  }\r\n\r\n  errored(error: any) {\r\n    this.logWriter.logRedish('next state after error', this.store.snapshot());\r\n    this.logWriter.logRedish('error', error);\r\n    this.logWriter.endGroup();\r\n  }\r\n\r\n  private _hasPayload(event: any) {\r\n    const nonEmptyProperties = this._getNonEmptyProperties(event);\r\n    return nonEmptyProperties.length > 0;\r\n  }\r\n\r\n  private _getNonEmptyProperties(event: any) {\r\n    const keys = Object.keys(event);\r\n    const values = keys.map(key => event[key]);\r\n    return values.filter(value => value !== undefined);\r\n  }\r\n}\r\n","import { NgxsLoggerPluginOptions } from './symbols';\r\nexport class LogWriter {\r\n  private logger: any;\r\n\r\n  constructor(private options: NgxsLoggerPluginOptions) {\r\n    this.options = this.options || <any>{};\r\n    this.logger = options.logger || console;\r\n  }\r\n\r\n  startGroup(message: string) {\r\n    const startGroupFn = this.options.collapsed\r\n      ? this.logger.groupCollapsed\r\n      : this.logger.group;\r\n    try {\r\n      startGroupFn.call(this.logger, message);\r\n    } catch (e) {\r\n      console.log(message);\r\n    }\r\n  }\r\n\r\n  endGroup() {\r\n    try {\r\n      this.logger.groupEnd();\r\n    } catch (e) {\r\n      this.logger.log('ââ log end ââ');\r\n    }\r\n  }\r\n\r\n  logGrey(title: string, payload: any) {\r\n    const greyStyle = 'color: #9E9E9E; font-weight: bold';\r\n    this.log(title, greyStyle, payload);\r\n  }\r\n\r\n  logGreen(title: string, payload: any) {\r\n    const greenStyle = 'color: #4CAF50; font-weight: bold';\r\n    this.log(title, greenStyle, payload);\r\n  }\r\n\r\n  logRedish(title: string, payload: any) {\r\n    const redishStyle = 'color: #FD8182; font-weight: bold';\r\n    this.log(title, redishStyle, payload);\r\n  }\r\n\r\n  log(title: string, color: string, payload: any) {\r\n    if (this.isIE()) {\r\n      this.logger.log(title, payload);\r\n    } else {\r\n      this.logger.log('%c ' + title, color, payload);\r\n    }\r\n  }\r\n\r\n  isIE(): boolean {\r\n    const ua =\r\n      typeof window !== 'undefined' && window.navigator.userAgent\r\n        ? window.navigator.userAgent\r\n        : '';\r\n    let msIE = false;\r\n    const oldIE = ua.indexOf('MSIE ');\r\n    const newIE = ua.indexOf('Trident/');\r\n    if (oldIE > -1 || newIE > -1) {\r\n      msIE = true;\r\n    }\r\n    return msIE;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface NgxsLoggerPluginOptions {\r\n  /** Auto expand logged actions  */\r\n  collapsed?: boolean;\r\n\r\n  /** Provide alternate console.log implementation */\r\n  logger?: any;\r\n\r\n  /** Disable the logger. Useful for prod mode. */\r\n  disabled?: boolean;\r\n\r\n  /** Predicate for actions to be the logged. Takes action and state snapshot as parameters */\r\n  filter?: (action: any, state: any) => boolean;\r\n}\r\n\r\nexport const NGXS_LOGGER_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOGGER_PLUGIN_OPTIONS');\r\n","import { Inject, Injectable, Injector } from '@angular/core';\r\nimport { NgxsNextPluginFn, NgxsPlugin, Store } from '@ngxs/store';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { ActionLogger } from './action-logger';\r\nimport { LogWriter } from './log-writer';\r\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\r\n\r\n@Injectable()\r\nexport class NgxsLoggerPlugin implements NgxsPlugin {\r\n  private _store: Store;\r\n  private _logWriter: LogWriter;\r\n\r\n  constructor(\r\n    @Inject(NGXS_LOGGER_PLUGIN_OPTIONS) private _options: NgxsLoggerPluginOptions,\r\n    private _injector: Injector\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    if (this._options.disabled || !this._options.filter!(event, state)) {\r\n      return next(state, event);\r\n    }\r\n\r\n    this._logWriter = this._logWriter || new LogWriter(this._options);\r\n    // Retrieve lazily to avoid cyclic dependency exception\r\n    this._store = this._store || this._injector.get<Store>(Store);\r\n\r\n    const actionLogger = new ActionLogger(event, this._store, this._logWriter);\r\n\r\n    actionLogger.dispatched(state);\r\n\r\n    return next(state, event).pipe(\r\n      tap(nextState => {\r\n        actionLogger.completed(nextState);\r\n      }),\r\n      catchError(error => {\r\n        actionLogger.errored(error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NGXS_PLUGINS } from '@ngxs/store';\r\nimport { NgxsLoggerPlugin } from './logger.plugin';\r\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\r\n\r\nexport const USER_OPTIONS = new InjectionToken('LOGGER_USER_OPTIONS');\r\n\r\nexport function loggerOptionsFactory(options: NgxsLoggerPluginOptions) {\r\n  const defaultLoggerOptions: NgxsLoggerPluginOptions = {\r\n    logger: console,\r\n    collapsed: false,\r\n    disabled: false,\r\n    filter: () => true\r\n  };\r\n\r\n  return {\r\n    ...defaultLoggerOptions,\r\n    ...options\r\n  };\r\n}\r\n\r\n@NgModule()\r\nexport class NgxsLoggerPluginModule {\r\n  static forRoot(\r\n    options?: NgxsLoggerPluginOptions\r\n  ): ModuleWithProviders<NgxsLoggerPluginModule> {\r\n    return {\r\n      ngModule: NgxsLoggerPluginModule,\r\n      providers: [\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: NgxsLoggerPlugin,\r\n          multi: true\r\n        },\r\n        {\r\n          provide: USER_OPTIONS,\r\n          useValue: options\r\n        },\r\n        {\r\n          provide: NGXS_LOGGER_PLUGIN_OPTIONS,\r\n          useFactory: loggerOptionsFactory,\r\n          deps: [USER_OPTIONS]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}