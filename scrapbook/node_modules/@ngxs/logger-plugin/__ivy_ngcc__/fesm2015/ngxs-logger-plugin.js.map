{"version":3,"file":"ngxs-logger-plugin.js","sources":["@ngxs/logger-plugin/src/internals.ts","@ngxs/logger-plugin/src/action-logger.ts","@ngxs/logger-plugin/src/log-writer.ts","@ngxs/logger-plugin/src/symbols.ts","@ngxs/logger-plugin/src/logger.plugin.ts","@ngxs/logger-plugin/src/logger.module.ts"],"names":[],"mappings":"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","sourcesContent":["export const repeat = (str: string, times: number) => new Array(times + 1).join(str);\r\n\r\nexport const pad = (num: number, maxLength: number) =>\r\n  repeat('0', maxLength - num.toString().length) + num;\r\n\r\nexport function formatTime(time: Date) {\r\n  return (\r\n    pad(time.getHours(), 2) +\r\n    `:` +\r\n    pad(time.getMinutes(), 2) +\r\n    `:` +\r\n    pad(time.getSeconds(), 2) +\r\n    `.` +\r\n    pad(time.getMilliseconds(), 3)\r\n  );\r\n}\r\n","import { getActionTypeFromInstance, Store } from '@ngxs/store';\r\n\r\nimport { formatTime } from './internals';\r\nimport { LogWriter } from './log-writer';\r\n\r\nexport class ActionLogger {\r\n  constructor(private action: any, private store: Store, private logWriter: LogWriter) {}\r\n\r\n  dispatched(state: any) {\r\n    const actionName = getActionTypeFromInstance(this.action);\r\n    const formattedTime = formatTime(new Date());\r\n\r\n    const message = `action ${actionName} @ ${formattedTime}`;\r\n    this.logWriter.startGroup(message);\r\n\r\n    // print payload only if at least one property is supplied\r\n    if (this._hasPayload(this.action)) {\r\n      this.logWriter.logGrey('payload', { ...this.action });\r\n    }\r\n\r\n    this.logWriter.logGrey('prev state', state);\r\n  }\r\n\r\n  completed(nextState: any) {\r\n    this.logWriter.logGreen('next state', nextState);\r\n    this.logWriter.endGroup();\r\n  }\r\n\r\n  errored(error: any) {\r\n    this.logWriter.logRedish('next state after error', this.store.snapshot());\r\n    this.logWriter.logRedish('error', error);\r\n    this.logWriter.endGroup();\r\n  }\r\n\r\n  private _hasPayload(event: any) {\r\n    const nonEmptyProperties = this._getNonEmptyProperties(event);\r\n    return nonEmptyProperties.length > 0;\r\n  }\r\n\r\n  private _getNonEmptyProperties(event: any) {\r\n    const keys = Object.keys(event);\r\n    const values = keys.map(key => event[key]);\r\n    return values.filter(value => value !== undefined);\r\n  }\r\n}\r\n","import { NgxsLoggerPluginOptions } from './symbols';\r\nexport class LogWriter {\r\n  private logger: any;\r\n\r\n  constructor(private options: NgxsLoggerPluginOptions) {\r\n    this.options = this.options || <any>{};\r\n    this.logger = options.logger || console;\r\n  }\r\n\r\n  startGroup(message: string) {\r\n    const startGroupFn = this.options.collapsed\r\n      ? this.logger.groupCollapsed\r\n      : this.logger.group;\r\n    try {\r\n      startGroupFn.call(this.logger, message);\r\n    } catch (e) {\r\n      console.log(message);\r\n    }\r\n  }\r\n\r\n  endGroup() {\r\n    try {\r\n      this.logger.groupEnd();\r\n    } catch (e) {\r\n      this.logger.log('ââ log end ââ');\r\n    }\r\n  }\r\n\r\n  logGrey(title: string, payload: any) {\r\n    const greyStyle = 'color: #9E9E9E; font-weight: bold';\r\n    this.log(title, greyStyle, payload);\r\n  }\r\n\r\n  logGreen(title: string, payload: any) {\r\n    const greenStyle = 'color: #4CAF50; font-weight: bold';\r\n    this.log(title, greenStyle, payload);\r\n  }\r\n\r\n  logRedish(title: string, payload: any) {\r\n    const redishStyle = 'color: #FD8182; font-weight: bold';\r\n    this.log(title, redishStyle, payload);\r\n  }\r\n\r\n  log(title: string, color: string, payload: any) {\r\n    if (this.isIE()) {\r\n      this.logger.log(title, payload);\r\n    } else {\r\n      this.logger.log('%c ' + title, color, payload);\r\n    }\r\n  }\r\n\r\n  isIE(): boolean {\r\n    const ua =\r\n      typeof window !== 'undefined' && window.navigator.userAgent\r\n        ? window.navigator.userAgent\r\n        : '';\r\n    let msIE = false;\r\n    const oldIE = ua.indexOf('MSIE ');\r\n    const newIE = ua.indexOf('Trident/');\r\n    if (oldIE > -1 || newIE > -1) {\r\n      msIE = true;\r\n    }\r\n    return msIE;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface NgxsLoggerPluginOptions {\r\n  /** Auto expand logged actions  */\r\n  collapsed?: boolean;\r\n\r\n  /** Provide alternate console.log implementation */\r\n  logger?: any;\r\n\r\n  /** Disable the logger. Useful for prod mode. */\r\n  disabled?: boolean;\r\n\r\n  /** Predicate for actions to be the logged. Takes action and state snapshot as parameters */\r\n  filter?: (action: any, state: any) => boolean;\r\n}\r\n\r\nexport const NGXS_LOGGER_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOGGER_PLUGIN_OPTIONS');\r\n","import { Inject, Injectable, Injector } from '@angular/core';\r\nimport { NgxsNextPluginFn, NgxsPlugin, Store } from '@ngxs/store';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { ActionLogger } from './action-logger';\r\nimport { LogWriter } from './log-writer';\r\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\r\n\r\n@Injectable()\r\nexport class NgxsLoggerPlugin implements NgxsPlugin {\r\n  private _store: Store;\r\n  private _logWriter: LogWriter;\r\n\r\n  constructor(\r\n    @Inject(NGXS_LOGGER_PLUGIN_OPTIONS) private _options: NgxsLoggerPluginOptions,\r\n    private _injector: Injector\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    if (this._options.disabled || !this._options.filter!(event, state)) {\r\n      return next(state, event);\r\n    }\r\n\r\n    this._logWriter = this._logWriter || new LogWriter(this._options);\r\n    // Retrieve lazily to avoid cyclic dependency exception\r\n    this._store = this._store || this._injector.get<Store>(Store);\r\n\r\n    const actionLogger = new ActionLogger(event, this._store, this._logWriter);\r\n\r\n    actionLogger.dispatched(state);\r\n\r\n    return next(state, event).pipe(\r\n      tap(nextState => {\r\n        actionLogger.completed(nextState);\r\n      }),\r\n      catchError(error => {\r\n        actionLogger.errored(error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NGXS_PLUGINS } from '@ngxs/store';\r\nimport { NgxsLoggerPlugin } from './logger.plugin';\r\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\r\n\r\nexport const USER_OPTIONS = new InjectionToken('LOGGER_USER_OPTIONS');\r\n\r\nexport function loggerOptionsFactory(options: NgxsLoggerPluginOptions) {\r\n  const defaultLoggerOptions: NgxsLoggerPluginOptions = {\r\n    logger: console,\r\n    collapsed: false,\r\n    disabled: false,\r\n    filter: () => true\r\n  };\r\n\r\n  return {\r\n    ...defaultLoggerOptions,\r\n    ...options\r\n  };\r\n}\r\n\r\n@NgModule()\r\nexport class NgxsLoggerPluginModule {\r\n  static forRoot(\r\n    options?: NgxsLoggerPluginOptions\r\n  ): ModuleWithProviders<NgxsLoggerPluginModule> {\r\n    return {\r\n      ngModule: NgxsLoggerPluginModule,\r\n      providers: [\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: NgxsLoggerPlugin,\r\n          multi: true\r\n        },\r\n        {\r\n          provide: USER_OPTIONS,\r\n          useValue: options\r\n        },\r\n        {\r\n          provide: NGXS_LOGGER_PLUGIN_OPTIONS,\r\n          useFactory: loggerOptionsFactory,\r\n          deps: [USER_OPTIONS]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}