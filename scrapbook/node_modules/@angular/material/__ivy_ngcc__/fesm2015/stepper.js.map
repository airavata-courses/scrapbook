{"version":3,"file":"stepper.js","sources":["../../../../../../src/material/stepper/step-label.ts","../../../../../../src/material/stepper/stepper-intl.ts","../../../../../../src/material/stepper/step-header.ts","../../../../../../src/material/stepper/stepper-animations.ts","../../../../../../src/material/stepper/stepper-icon.ts","../../../../../../src/material/stepper/stepper.ts","../../../../../../src/material/stepper/stepper-button.ts","../../../../../../src/material/stepper/stepper-module.ts","../../../../../../src/material/stepper/public-api.ts","../../../../../../src/material/stepper/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n\n\n/** @docs-private */\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n\n/** @docs-private */\nexport const MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n  AfterViewInit,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\nimport {CanColorCtor, mixinColor, CanColor} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nclass MatStepHeaderBase extends CdkStepHeader {\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n}\n\nconst _MatStepHeaderMixinBase: CanColorCtor & typeof MatStepHeaderBase =\n    mixinColor(MatStepHeaderBase, 'primary');\n\n@Component({\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  inputs: ['color'],\n  host: {\n    'class': 'mat-step-header mat-focus-indicator',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends _MatStepHeaderMixinBase implements AfterViewInit, OnDestroy,\n  CanColor {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  /** Whether the ripple should be disabled. */\n  @Input() disableRipple: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the step header. */\n  focus(origin?: FocusOrigin, options?: FocusOptions) {\n    if (origin) {\n      this._focusMonitor.focusVia(this._elementRef, origin, options);\n    } else {\n      this._elementRef.nativeElement.focus(options);\n    }\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  _getDefaultTextForState(state: StepState): string {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    state('current', style({transform: 'none', visibility: 'visible'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    state('current', style({height: '*', visibility: 'visible'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\nimport {StepState} from '@angular/cdk/stepper';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  CdkStep,\n  CdkStepper,\n  StepContentPositionState,\n  STEPPER_GLOBAL_OPTIONS,\n  StepperOptions\n} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {ErrorStateMatcher, ThemePalette} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n@Component({\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [\n    {provide: ErrorStateMatcher, useExisting: MatStep},\n    {provide: CdkStep, useExisting: MatStep},\n  ],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel) stepLabel: MatStepLabel;\n\n  /** Theme color for the particular step. */\n  @Input() color: ThemePalette;\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    super(stepper, stepperOptions);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({selector: '[matStepper]', providers: [{provide: CdkStepper, useExisting: MatStepper}]})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  @ContentChildren(MatStep, {descendants: true}) _steps: QueryList<MatStep>;\n\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  readonly steps: QueryList<MatStep> = new QueryList<MatStep>();\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon, {descendants: true}) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Whether ripples should be disabled for the step headers. */\n  @Input() disableRipple: boolean;\n\n  /** Theme color for all of the steps in stepper. */\n  @Input() color: ThemePalette;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\n\n    // Mark the component for change detection whenever the content children query changes\n    this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._stateChanged();\n    });\n\n    this._animationDone.pipe(\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\n      takeUntil(this._destroyed)\n    ).subscribe(event => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatHorizontalStepper},\n    {provide: CdkStepper, useExisting: MatHorizontalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper {\n  /** Whether the label should display in bottom or end position. */\n  @Input()\n  labelPosition: 'bottom' | 'end' = 'end';\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatVerticalStepper},\n    {provide: CdkStepper, useExisting: MatVerticalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(\n    @Optional() dir: Directionality,\n    changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    super(dir, changeDetectorRef, elementRef, _document);\n    this._orientation = 'vertical';\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {Directive} from '@angular/core';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    'class': 'mat-stepper-next',\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperNext extends CdkStepperNext {\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    'class': 'mat-stepper-previous',\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './stepper-module';\nexport * from './step-label';\nexport * from './stepper';\nexport * from './stepper-button';\nexport * from './step-header';\nexport * from './stepper-intl';\nexport * from './stepper-animations';\nexport * from './stepper-icon';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}