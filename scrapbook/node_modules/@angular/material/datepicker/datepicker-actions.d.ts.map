{"version":3,"file":"datepicker-actions.d.ts","sources":["datepicker-actions.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AfterViewInit, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { MatDatepickerBase, MatDatepickerControl } from './datepicker-base';\n/** Button that will close the datepicker and assign the current selection to the data model. */\nexport declare class MatDatepickerApply {\n    private _datepicker;\n    constructor(_datepicker: MatDatepickerBase<MatDatepickerControl<unknown>, unknown>);\n    _applySelection(): void;\n}\n/** Button that will close the datepicker and discard the current selection. */\nexport declare class MatDatepickerCancel {\n    _datepicker: MatDatepickerBase<MatDatepickerControl<unknown>, unknown>;\n    constructor(_datepicker: MatDatepickerBase<MatDatepickerControl<unknown>, unknown>);\n}\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nexport declare class MatDatepickerActions implements AfterViewInit, OnDestroy {\n    private _datepicker;\n    private _viewContainerRef;\n    _template: TemplateRef<unknown>;\n    private _portal;\n    constructor(_datepicker: MatDatepickerBase<MatDatepickerControl<unknown>, unknown>, _viewContainerRef: ViewContainerRef);\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}