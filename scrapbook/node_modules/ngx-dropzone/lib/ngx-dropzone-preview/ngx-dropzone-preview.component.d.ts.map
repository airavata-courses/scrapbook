{"version":3,"file":"ngx-dropzone-preview.component.d.ts","sources":["ngx-dropzone-preview.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { SafeStyle, DomSanitizer } from '@angular/platform-browser';\nexport declare class NgxDropzonePreviewComponent {\n    protected sanitizer: DomSanitizer;\n    constructor(sanitizer: DomSanitizer);\n    protected _file: File;\n    /** The file to preview. */\n    set file(value: File);\n    get file(): File;\n    /** Allow the user to remove files. */\n    get removable(): boolean;\n    set removable(value: boolean);\n    protected _removable: boolean;\n    /** Emitted when the element should be removed. */\n    readonly removed: EventEmitter<File>;\n    keyEvent(event: KeyboardEvent): void;\n    /** We use the HostBinding to pass these common styles to child components. */\n    get hostStyle(): SafeStyle;\n    /** Make the preview item focusable using the tab key. */\n    tabIndex: number;\n    /** Remove method to be used from the template. */\n    _remove(event: any): void;\n    /** Remove the preview item (use from component code). */\n    remove(): void;\n    protected readFile(): Promise<string | ArrayBuffer>;\n}\n"]}