import { MetaDataModel, StateClass } from './internals';
export declare type OverwriteTuple = [StateClass, any];
/**
 * Action to clear all state except given state(s)
 */
export declare class StateClear {
    static readonly type = "@@CLEAR_STATE";
    readonly statesToKeep: MetaDataModel[];
    constructor(...statesToKeep: StateClass[]);
    constructor();
}
/**
 * Action to reset given state(s) to defaults
 */
export declare class StateReset {
    static readonly type = "@@RESET_STATE";
    readonly statesToReset: MetaDataModel[];
    constructor(...statesToReset: StateClass[]);
}
/**
 * Action to reset all states expect given state(s) to defaults
 */
export declare class StateResetAll {
    static readonly type = "@@RESET_STATE_ALL";
    readonly statesToKeep: MetaDataModel[];
    constructor(...statesToKeep: StateClass[]);
    constructor();
}
/**
 * Action to overwrite state(s) with given value(s)
 */
export declare class StateOverwrite {
    static readonly type = "@@OVERWRITE_STATE";
    readonly statesToOverwrite: MetaDataModel[];
    readonly values: any[];
    constructor(...overwriteConfigs: OverwriteTuple[]);
}
export declare function getMetaData(state: StateClass, devMode: number): MetaDataModel | null;
