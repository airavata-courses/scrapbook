node {
    def app
    def registry = 'hrishikeshpaul/scrapbook-user-service'
    def registryCredential = 'docker-hub-credentials'
    def kube = 'scrapbook-user-service'

    stage('Clone repository') {
        /* Checking out to the repository */
        checkout scm
    }

    stage('Prepare repository') {
        /* Copying the subdir to the parent */
        sh "cp -a ./scrapbook-user-service/. ."
        /* Removing sub directory */
        sh "rm -rf ./scrapbook-user-service"
    }

    stage('Build repository') {
        /* Installing application dependencies */
		sh 'npm install'
	}

	stage('Test repository') {
        /* Testing the application */
		sh 'npm test'
	}

    stage('Building image') {
        /* Building the docker image */
        app = docker.build(registry)
	} 

    stage('Pushing image') {
        /* Pushing image to docker hub */
        docker.withRegistry('https://registry.hub.docker.com', registryCredential ) {
            app.push("latest")
        }
	}

    stage('Deleting local image') {
        /* Removing locally built images to clear up space */
        sh "docker rmi ${registry}:latest"
        sh "docker rmi registry.hub.docker.com/${registry}:latest"
        sh 'docker ps -q -f status=exited | xargs --no-run-if-empty docker rm'
        sh 'docker images -q -f dangling=true | xargs --no-run-if-empty docker rmi'
    }

    stage('Deploy on Kubernetes'){
        // sh "chmod +x deploy.sh"
        // sh "./deploy.sh"
        
        sshagent(['kube-ssh']) {
            sh 'scp deploy.sh ubuntu@149.165.169.58:/home/ubuntu'
            sh 'ssh ubuntu@149.165.169.58 chmod +x deploy.sh'
            sh 'ssh ubuntu@149.165.169.58 ./deploy.sh'
        }

    }
}