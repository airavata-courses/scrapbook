version: "3"
services:
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
        - scrapbook_network

  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - ./data:/data/db
    ports:
      - "27018:27017"
    networks:
      - scrapbook_network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: sb-zookeeper
    networks:
      - scrapbook_network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: wurstmeister/kafka
    container_name: sb-kafka
    hostname: kafka
    ports:
      - "9092:9092"
    depends_on: 
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "INTERNAL://kafka:9092, EXTERNAL://localhost:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092, EXTERNAL://localhost:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CREATE_TOPICS: "image:1:1"
    networks:
      - scrapbook_network

  sb-gateway:
    container_name: sb-gateway
    image: hrishikeshpaul/scrapbook-gateway-service
    restart: unless-stopped
    build: .
    ports:
      - "8081:8081"
    environment:
      PORT: "8081"
      DEBUG: "True"
      HOST: "0.0.0.0"
      AUTH_SERVICE: "http://sb-auth:5000"
      USER_SERVICE: "http://sb-user:3000"
      SESSION_SERVICE: "http://sb-session:3500"
      IMAGE_SERVICE: "http://sb-image:8080"
      G_DRIVE_SERVICE: "http://sb-gdrive:9090"
      MDE_SERVICE: "http://sb-mde:12000"
    networks:
      - scrapbook_network

  sb-auth:
    container_name: sb-auth
    image: hrishikeshpaul/scrapbook-auth-service
    restart: unless-stopped
    build: .
    ports:
      - "5000:5000"
    environment:
      DEBUG: "True"
      PORT: "5000"
      CLIENT_ID: "6383607950-8vfdgb52qqgfrkin3sonc424qamc5mkc.apps.googleusercontent.com"
      CLIENT_SECRET: "3VBr2hLv2ZJ6-jbNHYcXSM0i"
      HOST: "0.0.0.0"
    networks:
        - scrapbook_network

  sb-user:
    container_name: sb-user
    image: hrishikeshpaul/scrapbook-user-service
    restart: unless-stopped
    build: .
    ports:
      - "3000:3000"
    links:
      - mongo
    depends_on:
      - mongo
    environment:
      MONGO_URI: "mongodb://mongo:27017/scrapbookUserService"
    networks:
      - scrapbook_network

  sb-session:
    container_name: sb-session
    image: hrishikeshpaul/scrapbook-session-service
    restart: unless-stopped
    build: .
    ports:
      - "3500:3500"
    links:
      - redis
    environment:
      REDIS_PORT: "6379"
      REDIS_HOST: "redis"
    depends_on:
      - redis
    networks:
      - scrapbook_network

  sb-ui:
    container_name: sb-ui
    image: hrishikeshpaul/scrapbook-ui
    restart: unless-stopped
    ports:
      - "4200:80"
    networks:
      - scrapbook_network

  sb-image:
    container_name: sb-image
    image: hrishikeshpaul/scrapbook-image-service
    restart: unless-stopped
    build: .
    environment:
      DRIVE: "http://sb-gdrive:9090"
      MDE: "http://sb-mde:12000/metadata/match"
      MONGO : "mongo"
    ports:
      - "8080:8080"
    links:
      - mongo
    depends_on: 
      - mongo
    networks: 
      - scrapbook_network
    

  sb-gdrive:
    container_name: sb-gdrive
    image: hrishikeshpaul/scrapbook-googledrive-service
    restart: unless-stopped
    ports:
      - "9090:9090"
    build: .
    environment:
      IMG: "http://sb-image:8080"
      PORT: "9090"
    links:
      - kafka
    depends_on:
      - kafka
    networks:
      - scrapbook_network
  
  sb-mde:
    container_name: sb-mde
    image: hrishikeshpaul/scrapbook-metadata-service
    restart: unless-stopped
    ports:
      - "12000:12000"
    build: .
    environment: 
      MONGO_URI: "mongodb://mongo:27017/scrapbookMetadataService"
      KAFKA_URI: "kafka:9092"
      PORT: "12000"
      DEBUG: "True"
      KAFKA_TOPIC: "image"
      HOST: "0.0.0.0"
      G_DRIVE_SERVICE: "http://sb-gdrive:9090"
    links:
      - kafka
      - zookeeper
      - mongo
    depends_on: 
      - mongo
      - zookeeper
      - kafka
    networks:
      - scrapbook_network
    
networks: 
  scrapbook_network:
    driver: bridge